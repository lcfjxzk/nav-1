{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","console","log","splice","prompt","indexOf","push","logoType","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.eb3aa03d.js","sourceRoot":"..\\src","sourcesContent":["const $siteList = $(\".siteList\");\r\nconst $lastLi = $siteList.find(\"li.last\");\r\nconst x = localStorage.getItem(\"x\");\r\n\r\n// console.log(\"x\");\r\n// console.log(x);\r\n\r\nconst xObject = JSON.parse(x); //把字符串转化为对象。与JSON.stringify对应，JSON.stringify可以把对象转化为字符串。\r\n\r\n// console.log(\"xObject\");\r\n// console.log(xObject);\r\n\r\nconst hashMap = xObject || [\r\n  { logo: \"A\", url: \"https://www.acfun.cn\" },\r\n  { logo: \"B\", url: \"https://www.bilibili.com\" }\r\n]; //如果xObject存在，就用xObject对象，如果xObject不存在，就用后面的[{},{}]对象。\r\n\r\nconst simplifyUrl = url => {\r\n  return url\r\n    .replace(\"https://\", \"\")\r\n    .replace(\"http://\", \"\")\r\n    .replace(\"www.\", \"\")\r\n    .replace(/\\/.*/, \"\"); //将\"/.*\"替换为空值---->正则表达式\r\n};\r\n\r\nconst render = () => {\r\n  $siteList.find(\"li:not(.last)\").remove();\r\n  hashMap.forEach((node, index) => {\r\n    const $li = $(`<li>    \r\n      <div class=\"site\">\r\n        <div class=\"logo\">${node.logo[0]}</div>\r\n        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        <div class=\"close\">\r\n          <svg class=\"icon\">\r\n            <use xlink:href=\"#icon-close\"></use>\r\n          </svg>\r\n        </div>\r\n      </div>    \r\n  </li> \r\n      `).insertBefore($lastLi);\r\n    $li.on(\"click\", () => {\r\n      window.open(node.url);\r\n    });\r\n    $li.on(\"click\", \".close\", e => {\r\n      e.stopPropagation();\r\n      //JS阻止冒泡,再点击close图标，不会再跳转页面。\r\n      console.log(hashMap);\r\n      hashMap.splice(index, 1); //在WebStorm里面是(index, deleteCount:1)，WebStorm的自动功能，在每一个参数前面加上一个注释。比如deleteCount。\r\n      //在index这里删除一个。\r\n      render(); //重新渲染hashMap.\r\n    });\r\n  });\r\n};\r\n//console.log($);\r\nrender();\r\n$(\".addButton\").on(\"click\", () => {\r\n  //console.log(1);\r\n  let url = window.prompt(\"请问你要添加的网址是啥？\");\r\n  if (url.indexOf(\"http\") !== 0) {\r\n    //如果url的第一个字符不等于'http'\r\n    url = \"https://\" + url;\r\n  }\r\n  console.log(url);\r\n  hashMap.push({ logo: simplifyUrl(url)[0], logoType: \"text\", url: url });\r\n\r\n  render();\r\n});\r\n\r\nwindow.onbeforeunload = () => {\r\n  //console.log(\"页面要关闭了\");\r\n  const string = JSON.stringify(hashMap); //JSON.stringify可以把一个对象转化为字符串。\r\n  // console.log(typeof hashMap); //可以看到hashMap的类型是一个对象\r\n  // console.log(hashMap);\r\n  // console.log(typeof string);\r\n  // console.log(string); //长得像数组的字符串。\r\n  window.localStorage.setItem(\"x\", string); //localStorage只能存字符串，不能存对象。window.localStorage是一个全局变量。在本地存储里面设置一个x，它的值就是string\r\n}; //当关闭页面的时候，把当前hashMap存到x里面。\r\n\r\n$(document).on(\"keypress\", e => {\r\n  // console.log(e.key);\r\n  // const key = e.key\r\n  const { key } = e; //上一句的简写。\r\n  for (let i = 0; i < hashMap.length; i++) {\r\n    //按下标遍历hashMap\r\n    if (hashMap[i].logo.toLowerCase() === key) {\r\n      //如果hashMap表里面的第i个logo的小写===key\r\n      window.open(hashMap[i].url); //就打开下标i对应的url\r\n    }\r\n  }\r\n});\r\n"]}